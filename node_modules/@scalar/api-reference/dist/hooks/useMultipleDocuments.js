import { useNavState as h } from "./useNavState.js";
import { isDefined as w } from "@scalar/oas-utils/helpers";
import { isConfigurationWithSources as o, apiReferenceConfigurationSchema as m } from "@scalar/types/api-reference";
import S from "github-slugger";
import { computed as v, ref as I, watch as b } from "vue";
const f = "api", p = new S(), R = (e, s = 0) => {
  if (!(!(e != null && e.url) && !(e != null && e.content)))
    return p.reset(), e.title ? {
      ...e,
      slug: e.slug || p.slug(e.title),
      title: e.title
    } : e.slug ? {
      ...e,
      title: e.slug
    } : {
      ...e,
      slug: `api-${s + 1}`,
      title: `API #${s + 1}`
    };
}, T = ({ configuration: e, initialIndex: s }) => {
  const { isIntersectionEnabled: i } = h(), n = v(() => {
    var l;
    return e.value ? (o(e.value) ? ((l = e.value) == null ? void 0 : l.sources) ?? [] : [e.value].flat().map((t) => t)).map((t, a) => t && R(t, a)).filter(w) : [];
  }), c = (u) => {
    if (n.value.length === 1)
      return;
    const l = new URL(window.location.href), t = n.value[u], a = (t == null ? void 0 : t.slug) ?? u.toString();
    l.searchParams.set(f, a), l.hash = "", window.history.replaceState({}, "", l.toString()), i.value = !1, window.scrollTo({ top: 0, behavior: "instant" }), setTimeout(() => i.value = !0, 300);
  }, r = I((() => {
    const l = new URL(window.location.href).searchParams.get(f) || "0", t = n.value.findIndex((g) => g.slug === l);
    if (t !== -1)
      return t;
    const a = Number.parseInt(l, 10);
    return !isNaN(a) && a >= 0 && a < n.value.length ? a : typeof s == "number" ? s : 0;
  })()), d = v(() => {
    var l, t;
    if (e.value && o(e.value))
      return m.parse({
        ...e.value,
        ...(t = (l = e.value) == null ? void 0 : l.sources) == null ? void 0 : t[r.value],
        ...n.value[r.value]
      });
    const u = [e.value].flat()[r.value] ?? {};
    return m.parse({
      ...u,
      ...n.value[r.value]
    });
  });
  return b(r, c, { flush: "sync" }), {
    selectedConfiguration: d,
    availableDocuments: n,
    selectedDocumentIndex: r
  };
};
export {
  T as useMultipleDocuments
};
