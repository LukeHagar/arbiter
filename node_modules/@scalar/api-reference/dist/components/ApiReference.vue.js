import { defineComponent as a, toRef as l, openBlock as m, createBlock as f, unref as o, withCtx as s, createVNode as p, isRef as d } from "vue";
import _ from "./SingleApiReference.vue.js";
/* empty css                        */
import { useMultipleDocuments as g } from "../hooks/useMultipleDocuments.js";
import x from "./DocumentSelector/DocumentSelector.vue.js";
const B = /* @__PURE__ */ a({
  __name: "ApiReference",
  props: {
    configuration: {}
  },
  setup(t) {
    const i = t, { selectedConfiguration: r, availableDocuments: u, selectedDocumentIndex: e } = g({
      configuration: l(i, "configuration")
    });
    return (V, n) => (m(), f(_, { configuration: o(r) }, {
      "document-selector": s(() => [
        p(o(x), {
          modelValue: o(e),
          "onUpdate:modelValue": n[0] || (n[0] = (c) => d(e) ? e.value = c : null),
          options: o(u)
        }, null, 8, ["modelValue", "options"])
      ]),
      _: 1
    }, 8, ["configuration"]));
  }
});
export {
  B as default
};
