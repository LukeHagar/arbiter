import { defineComponent as le, computed as g, ref as $, onBeforeMount as H, onMounted as de, onUnmounted as ue, watch as E, onServerPrefetch as ce, useSSRContext as pe, useId as fe, provide as w, openBlock as y, createElementBlock as C, Fragment as D, createElementVNode as u, normalizeClass as me, unref as l, normalizeStyle as ve, renderSlot as c, normalizeProps as p, guardReactiveProps as f, createVNode as m, withCtx as v, createCommentVNode as O, withDirectives as Se, vShow as he, createSlots as ge } from "vue";
import { provideUseId as be } from "@headlessui/vue";
import { LAYOUT_SYMBOL as we } from "@scalar/api-client/hooks";
import { createWorkspaceStore as ye, WORKSPACE_SYMBOL as Ce, createActiveEntitiesStore as Te, ACTIVE_ENTITIES_SYMBOL as Re } from "@scalar/api-client/store";
import { addScalarClassesToHeadless as $e, ScalarErrorBoundary as Ee } from "@scalar/components";
import { defaultStateFactory as _ } from "@scalar/oas-utils/helpers";
import { hasObtrusiveScrollbars as Oe, getThemeStyles as Ie } from "@scalar/themes";
import { apiReferenceConfigurationSchema as ke } from "@scalar/types/api-reference";
import { useToasts as Fe, ScalarToasts as Le } from "@scalar/use-toasts";
import { useMediaQuery as Pe, useResizeObserver as Me, useDebounceFn as Be } from "@vueuse/core";
import Ae from "./GettingStarted.vue.js";
import { CONFIGURATION_SYMBOL as He } from "../hooks/useConfig.js";
import { useHttpClientStore as De } from "../stores/useHttpClientStore.js";
import { downloadSpecBus as N, downloadSpecFile as _e } from "../helpers/specDownloads.js";
import Ne from "./Sidebar/Sidebar.vue.js";
import Ue from "./Content/Content.vue.js";
import ze from "../features/ApiClientModal/ApiClientModal.vue.js";
import { useSidebar as Ye } from "../hooks/useSidebar.js";
import { useNavState as Ve } from "../hooks/useNavState.js";
import { sleep as Ge } from "../helpers/sleep.js";
const We = ["innerHTML"], je = { class: "references-header" }, Ke = ["aria-label"], Qe = { class: "references-navigation-list" }, qe = { class: "references-editor" }, Je = { class: "references-editor-textarea" }, Xe = ["aria-label"], Ze = {
  key: 0,
  class: "references-footer"
}, bt = /* @__PURE__ */ le({
  inheritAttrs: !1,
  __name: "ApiReferenceLayout",
  props: {
    configuration: {},
    parsedSpec: {},
    rawSpec: {}
  },
  emits: ["changeTheme", "updateContent", "loadSwaggerFile", "linkSwaggerFile", "toggleDarkMode"],
  setup(U) {
    const i = U, t = g(
      () => ke.parse(i.configuration)
    ), { initializeToasts: z, toast: Y } = Fe();
    z((e) => Y(e));
    const V = Pe("(min-width: 1150px)"), G = $("100dvh"), S = $(null);
    Me(S, (e) => {
      G.value = e[0].contentRect.height + "px";
    });
    const W = g(Oe), {
      breadcrumb: j,
      collapsedSidebarItems: b,
      isSidebarOpen: K,
      setCollapsedSidebarItem: I,
      hideModels: Q,
      defaultOpenAllTags: q,
      setParsedSpec: J,
      scrollToOperation: X
    } = Ye(), {
      getReferenceHash: Z,
      getPathRoutingId: k,
      getSectionId: x,
      getTagId: ee,
      hash: te,
      isIntersectionEnabled: F,
      pathRouting: T,
      updateHash: L,
      replaceUrlState: ae
    } = Ve();
    if (t.value.pathRouting && (T.value = t.value.pathRouting), i.configuration.redirect && typeof window < "u") {
      const e = i.configuration.redirect(
        (T.value ? window.location.pathname : "") + window.location.hash
      );
      e && history.replaceState({}, "", e);
    }
    H(() => L());
    const P = async (e) => {
      var a;
      F.value = !1, L(), e ? X(e) : (a = S.value) == null || a.scrollTo(0, 0), await Ge(100), F.value = !0;
    }, M = $(0);
    H(() => $e()), de(() => {
      var o, s, r;
      history.scrollRestoration = "manual", N.on(({ specTitle: n }) => {
        _e(i.rawSpec, n);
      });
      const e = (s = (o = S.value) == null ? void 0 : o.parentElement) == null ? void 0 : s.getBoundingClientRect(), a = (r = S.value) == null ? void 0 : r.getBoundingClientRect();
      if (e && a) {
        const n = a.top - e.top;
        M.value = n < 2 ? 0 : n;
      }
      window.onhashchange = () => {
        P(Z());
      }, window.onpopstate = () => T.value && P(k(window.location.pathname));
    });
    const oe = g(
      () => V.value || !t.value.isEditable
    ), B = Be((e) => {
      if ((e.target.scrollTop ?? 0) < 50) {
        const o = t.value.pathRouting ? t.value.pathRouting.basePath : window.location.pathname;
        ae("", o + window.location.search);
      }
    }), d = g(() => ({
      breadcrumb: j.value,
      spec: i.parsedSpec
    }));
    ue(() => {
      N.reset();
    }), E(() => i.parsedSpec, J, { deep: !0 }), ce(() => {
      var a, o;
      const e = pe();
      if (e && (e.payload || (e.payload = { data: _() }), (a = e.payload).data || (a.data = _()), t.value.pathRouting)) {
        const s = k(e.url);
        te.value = s, e.payload.data.hash = s;
        for (const r in b)
          Object.hasOwn(b, r) && delete b[r];
        if (s)
          I(x(s), !0);
        else {
          const r = (o = i.parsedSpec.tags) == null ? void 0 : o[0];
          r && I(ee(r), !0);
        }
        e.payload.data["useSidebarContent-collapsedSidebarItems"] = b;
      }
    }), be(() => fe());
    const R = ye({
      useLocalStorage: !1,
      ...t.value
    });
    E(
      () => i.rawSpec,
      (e) => {
        var a;
        return e && R.importSpecFile(e, "default", {
          shouldLoad: !1,
          documentUrl: (a = t.value.spec) == null ? void 0 : a.url,
          setCollectionSecurity: !0,
          ...t.value
        });
      },
      { immediate: !0 }
    ), w(Ce, R);
    const re = Te(R);
    w(Re, re), w(we, "modal"), w(He, t);
    function A(e, a) {
      E(
        () => t.value[e],
        (o) => {
          typeof o < "u" && a(o);
        },
        { immediate: !0 }
      );
    }
    const { setExcludedClients: se, setDefaultHttpClient: ne } = De();
    A("defaultHttpClient", ne), A("hiddenClients", se), Q.value = t.value.hideModels ?? !1, q.value = t.value.defaultOpenAllTags ?? !1;
    const ie = g(
      () => `<style>
  ${Ie(t.value.theme, {
        fonts: t.value.withDefaultFonts
      })}</style>`
    );
    return (e, a) => {
      var o, s, r;
      return y(), C(D, null, [
        u("div", { innerHTML: ie.value }, null, 8, We),
        u("div", {
          ref_key: "documentEl",
          ref: S,
          class: me(["scalar-app scalar-api-reference references-layout", [
            {
              "scalar-scrollbars-obtrusive": W.value,
              "references-editable": t.value.isEditable,
              "references-sidebar": t.value.showSidebar,
              "references-sidebar-mobile-open": l(K),
              "references-classic": t.value.layout === "classic"
            },
            e.$attrs.class
          ]]),
          style: ve({
            "--scalar-y-offset": `var(--scalar-custom-header-height, ${M.value}px)`
          }),
          onScrollPassive: a[4] || (a[4] = //@ts-ignore
          (...n) => l(B) && l(B)(...n))
        }, [
          u("div", je, [
            c(e.$slots, "header", p(f(d.value)), void 0, !0)
          ]),
          t.value.showSidebar ? (y(), C("aside", {
            key: 0,
            "aria-label": `Sidebar for ${(o = e.parsedSpec.info) == null ? void 0 : o.title}`,
            class: "references-navigation t-doc__sidebar"
          }, [
            u("div", Qe, [
              m(l(Ee), null, {
                default: v(() => [
                  m(l(Ne), {
                    operationsSorter: t.value.operationsSorter,
                    parsedSpec: e.parsedSpec,
                    tagsSorter: t.value.tagsSorter
                  }, {
                    "sidebar-start": v(() => [
                      c(e.$slots, "sidebar-start", p(f(d.value)), void 0, !0)
                    ]),
                    "sidebar-end": v(() => [
                      c(e.$slots, "sidebar-end", p(f(d.value)), void 0, !0)
                    ]),
                    _: 3
                  }, 8, ["operationsSorter", "parsedSpec", "tagsSorter"])
                ]),
                _: 3
              })
            ])
          ], 8, Ke)) : O("", !0),
          Se(u("div", qe, [
            u("div", Je, [
              c(e.$slots, "editor", p(f(d.value)), void 0, !0)
            ])
          ], 512), [
            [he, t.value.isEditable]
          ]),
          oe.value ? (y(), C(D, { key: 1 }, [
            u("main", {
              "aria-label": `Open API Documentation for ${(s = e.parsedSpec.info) == null ? void 0 : s.title}`,
              class: "references-rendered"
            }, [
              m(l(Ue), {
                layout: t.value.layout,
                parsedSpec: e.parsedSpec
              }, ge({
                start: v(() => [
                  c(e.$slots, "content-start", p(f(d.value)), void 0, !0)
                ]),
                end: v(() => [
                  c(e.$slots, "content-end", p(f(d.value)), void 0, !0)
                ]),
                _: 2
              }, [
                (r = t.value) != null && r.isEditable ? {
                  name: "empty-state",
                  fn: v(() => {
                    var n;
                    return [
                      m(Ae, {
                        theme: ((n = t.value) == null ? void 0 : n.theme) || "default",
                        onChangeTheme: a[0] || (a[0] = (h) => e.$emit("changeTheme", h)),
                        onLinkSwaggerFile: a[1] || (a[1] = (h) => e.$emit("linkSwaggerFile")),
                        onLoadSwaggerFile: a[2] || (a[2] = (h) => e.$emit("loadSwaggerFile")),
                        onUpdateContent: a[3] || (a[3] = (h) => e.$emit("updateContent", h))
                      }, null, 8, ["theme"])
                    ];
                  }),
                  key: "0"
                } : void 0
              ]), 1032, ["layout", "parsedSpec"])
            ], 8, Xe),
            e.$slots.footer ? (y(), C("div", Ze, [
              c(e.$slots, "footer", p(f(d.value)), void 0, !0)
            ])) : O("", !0)
          ], 64)) : O("", !0),
          m(l(ze), { configuration: t.value }, null, 8, ["configuration"])
        ], 38),
        m(l(Le))
      ], 64);
    };
  }
});
export {
  bt as default
};
