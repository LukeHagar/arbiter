import { defineComponent as j, computed as d, ref as T, useId as g, openBlock as l, createBlock as i, withCtx as v, createElementVNode as u, normalizeClass as y, createCommentVNode as c, createVNode as h, createElementBlock as k, Fragment as A } from "vue";
import I from "../../../components/SectionFilter.vue.js";
import V from "../../../components/ViewLayout/ViewLayoutSection.vue.js";
import H from "./ResponseBody.vue.js";
import q from "./ResponseEmpty.vue.js";
import E from "./ResponseLoadingOverlay.vue.js";
import O from "./ResponseMetaInformation.vue.js";
import $ from "./ResponseBodyVirtual.vue.js";
/* empty css                         */
import w from "./ResponseCookies.vue.js";
import z from "./ResponseHeaders.vue.js";
const L = { class: "flex h-8 flex-1 items-center" }, N = ["id", "role"], x = 2e5, J = /* @__PURE__ */ j({
  __name: "ResponseSection",
  props: {
    numWorkspaceRequests: {},
    response: {}
  },
  setup(n) {
    const m = d(() => {
      var o;
      const e = (o = n.response) == null ? void 0 : o.headers;
      return e ? Object.keys(e).map((a) => ({
        name: a,
        value: e[a] ?? "",
        required: !1
      })).filter(
        (a) => ![
          "rest-api-client-content-length",
          "X-API-Client-Content-Length"
        ].includes(a.name)
      ) : [];
    }), B = d(
      () => {
        var e;
        return ((e = n.response) == null ? void 0 : e.cookieHeaderKeys.flatMap((o) => {
          var t, r;
          const a = (r = (t = n.response) == null ? void 0 : t.headers) == null ? void 0 : r[o];
          return a ? {
            name: o,
            value: a,
            required: !1
          } : [];
        })) ?? [];
      }
    ), b = ["Cookies", "Headers", "Body"], s = T("All"), f = d(() => ["All", ...b]), p = d(
      () => Object.fromEntries(
        f.value.map((e) => [e, g()])
      )
    ), R = d(() => {
      var t, r;
      if (!n.response)
        return !1;
      const e = ((t = n.response.headers) == null ? void 0 : t["content-type"]) || ((r = n.response.headers) == null ? void 0 : r["Content-Type"]);
      return !e || (n.response.size ?? 0) <= x || e.includes("text/html") ? !1 : [
        // Text types
        "text/",
        // JSON types
        "application/json",
        "application/ld+json",
        "application/problem+json",
        "application/vnd.api+json",
        // XML types
        "application/xml",
        "application/atom+xml",
        "application/rss+xml",
        "application/problem+xml",
        // Other structured text
        "application/javascript",
        "application/ecmascript",
        "application/x-yaml",
        "application/yaml",
        // Source code
        "application/x-httpd-php",
        "application/x-sh",
        "application/x-perl",
        "application/x-python",
        "application/x-ruby",
        "application/x-java-source",
        // Form data
        "application/x-www-form-urlencoded"
      ].some((C) => e.includes(C)) && (n.response.size ?? 0) > x;
    });
    return (e, o) => (l(), i(V, { "aria-label": "Response" }, {
      title: v(() => [
        u("div", L, [
          u("div", {
            "aria-live": "polite",
            class: y(["flex items-center", { "animate-response-heading": e.response }])
          }, [
            o[1] || (o[1] = u("span", { class: "response-heading pointer-events-none absolute" }, " Response ", -1)),
            e.response ? (l(), i(O, {
              key: 0,
              class: "animate-response-children",
              response: e.response
            }, null, 8, ["response"])) : c("", !0)
          ], 2),
          h(I, {
            modelValue: s.value,
            "onUpdate:modelValue": o[0] || (o[0] = (a) => s.value = a),
            filterIds: p.value,
            filters: f.value
          }, null, 8, ["modelValue", "filterIds", "filters"])
        ])
      ]),
      default: v(() => {
        var a, t, r;
        return [
          u("div", {
            id: p.value.All,
            class: y(["custom-scroll relative grid h-full justify-stretch divide-y", {
              "content-start": e.response
            }]),
            role: s.value === "All" && e.response ? "tabpanel" : "none"
          }, [
            e.response ? (l(), k(A, { key: 1 }, [
              s.value === "All" || s.value === "Cookies" ? (l(), i(w, {
                key: 0,
                id: p.value.Cookies,
                cookies: B.value,
                role: s.value === "All" ? "none" : "tabpanel"
              }, null, 8, ["id", "cookies", "role"])) : c("", !0),
              s.value === "All" || s.value === "Headers" ? (l(), i(z, {
                key: 1,
                id: p.value.Headers,
                headers: m.value,
                role: s.value === "All" ? "none" : "tabpanel"
              }, null, 8, ["id", "headers", "role"])) : c("", !0),
              s.value === "All" || s.value === "Body" ? (l(), k(A, { key: 2 }, [
                R.value && typeof ((a = e.response) == null ? void 0 : a.data) == "string" ? (l(), i($, {
                  key: 0,
                  id: p.value.Body,
                  content: e.response.data,
                  data: (t = e.response) == null ? void 0 : t.data,
                  headers: m.value,
                  role: s.value === "All" ? "none" : "tabpanel"
                }, null, 8, ["id", "content", "data", "headers", "role"])) : (l(), i(H, {
                  key: 1,
                  id: p.value.Body,
                  active: !0,
                  data: (r = e.response) == null ? void 0 : r.data,
                  headers: m.value,
                  role: s.value === "All" ? "none" : "tabpanel",
                  title: "Body"
                }, null, 8, ["id", "data", "headers", "role"]))
              ], 64)) : c("", !0)
            ], 64)) : (l(), i(q, {
              key: 0,
              numWorkspaceRequests: e.numWorkspaceRequests
            }, null, 8, ["numWorkspaceRequests"])),
            h(E)
          ], 10, N)
        ];
      }),
      _: 1
    }));
  }
});
export {
  J as default
};
